external inner function Boolean HasPreferedOfficialSerNr();
external inner function Boolean HasInvoiceOfficialSerNr();
external inner function Boolean HasCategories();
external inner function Boolean HasContactClassification();
external inner function Boolean HasModSO();
external inner function Boolean HasModQT();
external inner function Boolean HasModPOS();
external inner function Boolean HasAdvancedCRM();
external inner function Boolean HasModCheck();
external inner function Boolean HasModCO();
external inner function Boolean HasLimitedAccess();
external inner function Boolean AcceptanceStatusColumnTest(string);
external inner function Boolean HasCustomerStatusReport();
external inner function Boolean HasFreightAdvanced();
external inner function Boolean UseTaxTemplatesforTaxCalc();
external inner function real VATZoneButtonsLabelsENG(real,real,real,real);
external inner function Boolean HasBuyBack();
external inner function Boolean HasStandardCRM();
external inner function Boolean HasEMail();
external inner function Boolean HasAdvancedProduction();
external inner function Boolean HasDownpayments();
external inner function Boolean HasSalesman();
external inner function Boolean HasVATZone();
external inner function Boolean HasSalesmanBonus();
external inner function Boolean HasSalesGroup();
external inner function Boolean HasAdvancedPricing();
external inner function Boolean HasModSVO();
external inner function Boolean HasWithholdingTax();
external inner function Boolean HasItemGroups();
external inner function Boolean HasConsStockMoveInvoices();
external inner function Boolean HasIntegratedNL();
external inner function string 60 UserDefined(string,string);
external inner function string 255 VATZoneNameENG();
external inner function Boolean HasModCRM();
external inner function Boolean HasPersons();
external inner function Boolean HasModWHM();
external inner function Boolean HasETaxDocuments();
external inner function Boolean HasReturnedGoods();
external inner function Boolean HasModNL();
external inner function Boolean HasNumberSeries();
external inner function Boolean HasCountryPerCustomer();
external inner function Boolean HasPositions();
external inner function Boolean HasSerialNumbers();
external inner function Boolean HasCustItem();
external inner function Boolean HasLanguages();
external inner function Boolean HasModTS();
external inner function Boolean HasBranch();
external inner function Boolean HasObjects();
external inner function Boolean HasRoute();
external inner function Boolean HasOfficialSerNr();
external inner function Boolean HasTREO();
external inner function Boolean IsEnterprise();
external inner function Boolean StandardHansa();
external inner function Boolean HasModIN();
external inner function Boolean HasModSL();
external inner function Boolean HasMultiLocations();
external inner function Boolean HasModPO();
external inner function Boolean HasMultiCurrency();
external inner function Boolean HasVarieties();
external inner function Boolean HasBase2();
external inner function Boolean HasApprovals();
external inner function Boolean HasModPL();
external inner function Boolean HasRetGoodsToSupp();
external inner function Boolean HasTaxMatrix();
external inner function Boolean HasQualityControl();
external inner function Boolean HasAdvancedStock();
external inner function Boolean HasModRent();
external inner function Boolean HasExtTax();
external inner function Boolean HasModProd();
external inner function Boolean HasThrouLocation();
external inner function Boolean HasDepartments();
external inner function Boolean HasSecondQuantity();

external inner function Boolean HasJewelleryInterface();
external inner function Boolean HasCharts();
external inner function Boolean HasItemClassification();
external inner function string 255 VATZoneEditFieldLabelENG(Integer);
external inner procedure RateField(real,real,real,string,integer,string,boolean,real,real,string,boolean);

SetLangMode(LangEnglish,"ENG",2);

window INrsRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,h4,v,vm,vs;
  WindowBegin("Specify Item History",INrsRClass,CGRcW,RcType);
  SetWRect(20,80,550,460);
  v = 6; vs = 20; h = 160; h2 = 30; h3 = 180; h4 = 340;
  PeriodField(h,v,"Period");
  EditFieldTL(h,v+=vs,150,"Item No.",M4UStr,Normal,50,f1,false,INSClass);
  if (HasItemGroups) then begin
    EditFieldTL(h,v+=vs,150,"Item Group",M4UStr,Normal,5,f3,false,ITSClass);
  end;
  if (HasItemClassification) then begin
    EditFieldTL(h,v+=vs,150,"Item Classification", M4UStr,Normal,60,f4,false,DISClass);
    EditFieldTL(h,v+=vs,150,"Classification Type",M4UStr,Normal,60,f5,false,CTypeSClass);
  end;
  if (HasMultiLocations) then begin
    EditFieldTL(h,v+=vs,150,"Location",M4Code,Normal,21,f6,false,LocationSClass);
    if (StandardHansa==false and IsEnterprise) then begin
      EditFieldTL(h,v+=vs,150,"Location Group",M4Code,Normal,10,f7,false,LocGrSClass);
      EditFieldTL(h,v+=vs,150,"Location Classification",M4List,Normal,200,f8,false,LocClSClass);
    end;
  end;
  if (HasDepartments) then begin
    EditFieldTL(h,v+=vs,150,"Department",M4UStr,Normal,10,AccStr,false,DepSClass);
  end;
  if (HasModPO) then begin
    EditFieldTL(h,v+=vs,150,"Default #Supplier#",M4UStr,Normal,10,f2,false,VESClass);
  end;
  EditFieldTL(h,v+=vs ,150,"Customer",M4UStr,Normal,50,f12,false,CUSClass);// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 18 May 2018 16:09:11
  if (IsEnterprise) then begin
    CheckBox(h2,v+=26,0,"Only #Stocked# Items",flags[11]);
//  CheckBox(h2,v+=16,0,"Show Quantity 2",flags[12]);
    CheckBox(h2,v+=16,0,"Show Balance for Items with no History",flags[13]);
    CheckBox(h2,v+=16,0,"Include Future Records",flags[14]);
  end;
  if (HasMultiLocations) then begin
    CheckBox(h2,v+=16,0,"Per Location",flags[15]);
  end;
  if (HasSerialNumbers) then begin
    CheckBox(h2,v+=16,0,"Include Serial No. Details",AccSpec);
  end;
  if (HasLocalization("ARG,MEX,USA") and IsStandardProduct==false) then begin
    CheckBox(h2,v+=16,0,"Include Dispatch Number",flags[22]);
  end;
//  CheckBox(h2,v+=16,0,"Include History Before #Stocktaking#",flags[19]);
  ButtonFrame(h2,vm=(v+=38),130,2,"Function");
  RadioButton(h2,v,0,0,"Overview",flags[9]);
  RadioButton(h2,v+=16,1,0,"Detailed",flags[9]);
  if (IsEnterprise) then begin
    ButtonFrame(h2,v+=40,130,2,"Sorting");
    RadioButton(h2,v,0,0,"Cost Date",flags[10]);
    RadioButton(h2,v+=16,1,0,"Trans. Date",flags[10]);
  end;
  ButtonFrame(h3,v=vm,140,3,"Function");
  RadioButton(h3,v,0,0,"Quantities",ArtMode);
  if (HasVarieties) then begin
    RadioButton(h3,v+=16,3,0,"Quantities & Varieties",ArtMode);
  end;
  RadioButton(h3,v+=16,1,0,"Quantities & Values",ArtMode); // 2 Has some code for it, don't know what....
  EndFrame;
  if (HasSecondQuantity) then begin
    ButtonFrame(h4,v=vm,150,3,"Function");//  CheckBox(20,v+=16,0,"Show Quantity 2",flags[12]);
    RadioButton(h4,v,0,0,"Don't show Quantity 2",flags[12]);
    RadioButton(h4,v+=16,1,0,"Show Quantity 2",flags[12]);
    RadioButton(h4,v+=16,2,0,"Show Coefficient",flags[12]);
    ButtonFrame(h4,v=30,160,12,"Registers");
  end else begin
    ButtonFrame(h4,v=vm,160,12,"Registers");
  end;
  if (HasModSO) then begin
    CheckBox(h4,v,0,"Deliveries",flags[2]); v = v + 16;
  end;
  CheckBox(h4,v,0,"Goods Receipts",flags[3]); v = v + 16;
  CheckBox(h4,v,0,"Invoices",flags[1]); v = v + 16;
//  CheckBox(h4,v,0,"POS Invoices",flags[16]); v = v + 16;
  if (HasModProd) then begin
    if (StandardHansa==false) then begin
      CheckBox(h4,v,0,"Production Orders",flags[18]); v = v + 16;
    end;
    CheckBox(h4,v,0,"Productions",flags[5]); v = v + 16;
    if (StandardHansa==false) then begin
      CheckBox(h4,v,0,"Production Operations",flags[20]); v = v + 16;
    end;
  end;
  if (HasAdvancedStock) then begin
    CheckBox(h4,v,0,"Returned Goods",flags[8]); v = v + 16;
    CheckBox(h4,v,0,"Returned Goods to #Supp.#",flags[19]); v = v + 16;
  end;
  CheckBox(h4,v,0,"#Stock Depreciations#",flags[6]); v = v + 16;
  if (IsEnterprise or (HasLocalization("PRT") and HasMultiLocations)) then begin
    CheckBox(h4,v,0,"#Stock# Movements",flags[4]); v = v + 16;
  end;
  if (HasAdvancedStock) then begin
    CheckBox(h4,v,0,"#Stock# Revaluations",flags[22]); v = v + 16;
  end;
  if (HasModRent) then begin
    CheckBox(h4,v,0,"#Stock# Transfers",flags[17]); v = v + 16;
  end;
  if (HasModSVO) then begin
    CheckBox(h4,v,0,"Work Sheets",flags[7]); v = v + 16;
  end;
  EndFrame;
  EndWindow;
end;
